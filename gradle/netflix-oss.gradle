apply from: 'http://artifacts.netflix.com/gradle-netflix-local/artifactory.gradle'

rootProject {
    afterProject {  project ->
        def compileConf = project.configurations.findByName('compile')
        if (compileConf==null) {
            return
        }
        def deps = compileConf.dependencies
        def awsDep = deps.find { it.group == 'com.amazonaws' && it.name == 'aws-java-sdk' }
        if (awsDep != null) {
            def version = awsDep.version
            deps.remove(awsDep)
            project.dependencies.add('compile', "com.amazonaws:aws-java-sdk:${version}")
        }

        def httpCoreDep = deps.find { it.group == 'org.apache.httpcomponents' && it.name == 'httpcore' }
        if (httpCoreDep != null) {
            deps.remove(httpCoreDep)
            project.dependencies.add('compile', "org.apache.httpcomponents:httpcore:4.1.2")
        }

        def cassDep = deps.find { it.group == 'org.apache.cassandra' && it.name == 'cassandra-all' }
        if (cassDep != null) {
            deps.remove(cassDep)
            project.dependencies.add('compile', 'apache-cassandra:apache-cassandra:1.2+')
            project.dependencies.add('compile', 'edu.stanford.ppl:snaptree:0.1') 
            project.dependencies.add('compile', 'com.yammer.metrics:metrics-core:2.0.3') 
            project.dependencies.add('compile', 'libthrift:libthrift:0.7.0') 
            project.dependencies.add('compile', 'antlr:antlr:3.2') 
            project.dependencies.add('compile', 'high-scale-lib:high-scale-lib:1.1.2') 
            project.dependencies.add('compile', 'com.googlecode.concurrentlinkedhashmap:concurrentlinkedhashmap-lru:1.3') 
        }
    }
}
